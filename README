*** Everything here is Copyright 2008 Citizen Logistics, LLC ***
***         and released under the Affero GPL v3             ***



==============================================
== Running the viewer on your local machine ==
==============================================

Run the following in a shell, to build the javascipt and html up
for constituent files, and then to grab real live data to test
with from the real groundcrew.us server and cache it locally.

% make
% make grab GCUN='<your groundcrew.us email>' GCPW='<your password>'

At this point you should be able to run the viewer locally in
firefox or safari or whatever:

% open dist/viewer.html     # or...
% firefox dist/viewer.html

If you change javascript, html or css files, you have to run
'make' to rebuild.

The only thing that doesn't work quite right in local mode are
the user images.  Sorry about that.  Also, only your home city
will have data loaded from the server.


=====================
== Troubleshooting ==
=====================

GOOGLE MAPS:  In order for google maps to work, you need to access 
the viewer from either a *.groundcrew.us domain, or a localhost url, 
or a file:/// url.  If you refer to your local machine in some other 
way it will not work.


===========================
== Navigating the source ==
===========================

Here are the directories we use:

/apps/        - the real functionality, broken down by application

/src/
	foundation/     - javascript and css utilities and conventions
	gc_api/         - javascript utilities for groundcrew domain objects (agents, landmarks, etc)
	viewer_core/    - javascript infrastructure for displaying the viewer
	viewer_widgets/ - html and css for the viewer

/vendor/          - javascript from outside sources
/test/            - qunit javascript tests


RECENT NOTES:

* The viewer is now organized into multiple apps, and apps provide their
  services and link to each other using an internal URL structure which 
  is implemented in 'src/viewer_core/viewer.js'.  For example, a command
  like Viewer.go('/mobilize/noho/good_deeds/Idea__12/Agent__405') will 
  run some code in apps/mobilize_app/mobilize.js which will provide
  breadcrumbs and open an agent window relative to a specific good deed
  idea.

* 'domain' functionality is implemented in apps/, and only general
  functionality useful across all apps in in src/.

* The src/ stuff is now organized into architectural levels.  We have 
  some foundational javascript utilities and css conventions, then we 
  have an API for dealing with groundcrew objects like agents and ideas,
  built on top of that.  Then we have the viewer code built on those 
  two, with widgets separated from javascript.

* src/gc_api/ is going to be overhauled next.  I'm going to implement a
  generic javascript "database" layer for searching and grouping 
  groundcrew resources, and put the gc_api stuff on top of that, instead
  of directly on top of javascript dictionaries and jquery ajax 
  commands.
